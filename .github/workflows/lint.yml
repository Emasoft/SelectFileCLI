name: Lint
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        uv sync --locked
    - name: Setup SEP
      uses: ./.github/actions/setup-sep
      with:
        memory-limit: '2048'
        timeout: '1800'

    - name: Install actionlint
      run: |
        curl -s https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash | bash
        sudo mv actionlint /usr/local/bin/

    - name: Run all lint checks sequentially
      run: |-
        # Create a script with all lint commands
        cat > lint_all.sh << 'EOF'
        #!/usr/bin/env bash
        set -euo pipefail

        echo "=== Running ruff check ==="
        uv run ruff check --ignore E203,E402,E501,E266,W505,F841,F842,F401,W293,I001,UP015,C901,W291 --isolated --output-format full

        echo "=== Running ruff format check ==="
        uv run ruff format --check --line-length=320

        echo "=== Running mypy ==="
        uv run mypy --install-types --non-interactive src/selectfilecli

        echo "=== Running deptry ==="
        uv run deptry src

        echo "=== Running yamllint ==="
        uv run yamllint .github/workflows/*.yml

        echo "=== Running actionlint ==="
        actionlint
        EOF

        chmod +x lint_all.sh

        # Execute all commands sequentially through SEP
        ./scripts/sep_queue.sh --timeout 7200 -- ./lint_all.sh
        ./scripts/sep_queue.sh --queue-start
