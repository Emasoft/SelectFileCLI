# scan.yml - Force full project scan (lint, format, test, security on all files)
#
# This workflow runs all checks on all files regardless of what changed.
# Useful for comprehensive validation or scheduled checks.
#
name: Full Project Scan

on:
  workflow_dispatch:
  schedule:
  # Run every Sunday at 2 AM UTC
  - cron: '0 2 * * 0'
  workflow_call:

jobs:
  scan-all:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Full history for complete analysis

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: |
        uv sync --locked

    - name: Install additional tools
      run: |
        # Install security tools
        uv pip install safety pip-audit

        # Install code quality tools
        uv pip install vulture radon

        # Install actionlint
        curl -s https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash | bash
        sudo mv actionlint /usr/local/bin/

        # Install yamlfmt
        go install github.com/google/yamlfmt/cmd/yamlfmt@latest

    - name: Full formatting check
      run: |
        echo "=== Checking Python formatting ==="
        ./scripts/sep_queue.sh --timeout 3600 -- uv run ruff format --check --line-length=320 .

        echo "=== Checking import sorting ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run isort --check-only --profile black --line-length 320 .

    - name: Full linting scan
      run: |
        echo "=== Running ruff on all Python files ==="
        ./scripts/sep_queue.sh --timeout 3600 -- uv run ruff check --ignore E203,E402,E501,E266,W505,F841,F842,F401,W293,I001,UP015,C901,W291 --isolated .

        echo "=== Running mypy type checking ==="
        ./scripts/sep_queue.sh --timeout 7200 -- uv run mypy --install-types --non-interactive .

        echo "=== Running deptry dependency check ==="
        ./scripts/sep_queue.sh --timeout 3600 -- uv run deptry .

    - name: Code quality analysis
      run: |
        echo "=== Finding dead code with vulture ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run vulture . --min-confidence 80 || true

        echo "=== Analyzing code complexity ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run radon cc . -a -nb || true

        echo "=== Analyzing maintainability index ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run radon mi . -nb || true

    - name: Security scan
      run: |
        echo "=== Running TruffleHog for secrets ==="
        ./scripts/sep_queue.sh --timeout 3600 -- bash -c "
          docker run --rm -v $(pwd):/repo trufflesecurity/trufflehog:latest \
            git file:///repo --only-verified --fail --no-update || true
        "

        echo "=== Running safety check ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run safety check --json || true

        echo "=== Running pip-audit ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run pip-audit || true

    - name: YAML and GitHub Actions scan
      run: |
        echo "=== Linting YAML files ==="
        ./scripts/sep_queue.sh --timeout 1800 -- uv run yamllint -c .yamllint .

        echo "=== Checking YAML formatting ==="
        yamlfmt -path .github/workflows -dry-run || true

        echo "=== Linting GitHub Actions ==="
        ./scripts/sep_queue.sh --timeout 1800 -- actionlint

    - name: Shell script analysis
      run: |
        echo "=== Running shellcheck on all shell scripts ==="
        find . -name "*.sh" -type f -not -path "./.venv/*" -not -path "./node_modules/*" | \
          while read -r script; do
            echo "Checking: $script"
            ./scripts/sep_queue.sh --timeout 300 -- shellcheck --severity=warning "$script" || true
          done

    - name: Run all tests
      run: |
        echo "=== Running full test suite with coverage ==="
        ./scripts/sep_queue.sh --timeout 7200 -- uv run pytest -v --cov=. --cov-report=term-missing --cov-report=html

    - name: Generate scan report
      if: always()
      run: |
        echo "# Full Project Scan Report" > scan-report.md
        echo "" >> scan-report.md
        echo "Date: $(date)" >> scan-report.md
        echo "Commit: ${{ github.sha }}" >> scan-report.md
        echo "" >> scan-report.md
        echo "## Summary" >> scan-report.md
        echo "- Python files: $(find . -name "*.py" -type f -not -path "./.venv/*" | wc -l)" >> scan-report.md
        echo "- Shell scripts: $(find . -name "*.sh" -type f | wc -l)" >> scan-report.md
        echo "- YAML files: $(find . -name "*.yml" -o -name "*.yaml" | wc -l)" >> scan-report.md
        echo "- Total LOC: $(find . -name "*.py" -type f -not -path "./.venv/*" -exec wc -l {} + | tail -1 | awk '{print $1}')" >> scan-report.md

    - name: Upload scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scan-results
        path: |
          scan-report.md
          htmlcov/
        retention-days: 30
