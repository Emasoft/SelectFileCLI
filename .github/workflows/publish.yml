# publish.yml - Publish packages to PyPI on version tags
#
# Triggers on version tags (v*) and publishes to PyPI using trusted publishing.
# Includes test builds before publishing and creates GitHub releases.
#
name: Publish to PyPI
on:
  push:
    tags:
    - 'v*' # Trigger on version tags like v0.3.0
  workflow_dispatch: # Allow manual trigger
permissions:
  contents: read
  id-token: write # Required for trusted publishing
jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    - name: Set up Python
      run: uv python install 3.12
    - name: Install dependencies
      run: |
        uv sync --locked
    - name: Check dependencies with deptry
      run: |
        ./scripts/sep_queue.sh --timeout 600 -- uv run deptry .
    - name: Run tests
      run: |
        ./scripts/sep_queue.sh --timeout 1800 -- uv run pytest --tb=short
    - name: Build package
      run: |
        ./scripts/sep_queue.sh --timeout 3600 -- uv build
    - name: Store distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
  publish-to-pypi:
    name: Publish to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/selectfilecli
    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # This uses PyPI's trusted publishing
      # No API token needed when properly configured
  github-release:
    name: Create GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |-
        gh release create "${{ github.ref_name }}" \
          --title "Release ${{ github.ref_name }}" \
          --generate-notes \
          dist/*
