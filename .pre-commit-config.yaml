# Sequential pre-commit configuration
# All hooks run one at a time to minimize resource usage
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_language_version:
  python: python3.12

default_stages: [pre-commit]

repos:
  # Basic file checks first (lightweight)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        stages: [pre-commit]
      - id: end-of-file-fixer
        stages: [pre-commit]
      - id: check-yaml
        args: ['--allow-multiple-documents']
        stages: [pre-commit]
      - id: check-added-large-files
        args: ['--maxkb=1000']
        stages: [pre-commit]
      - id: check-toml
        stages: [pre-commit]
      - id: check-json
        stages: [pre-commit]
      - id: check-merge-conflict
        stages: [pre-commit]

  # Update uv lockfile
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.7.17
    hooks:
      - id: uv-lock
        stages: [pre-commit]
        require_serial: true

  # Python formatting and linting (with require_serial: true)
  - repo: local
    hooks:
      - id: ruff-format
        name: Format with ruff
        entry: uv run ruff format --line-length=320
        language: system
        types: [python]
        pass_filenames: true
        stages: [pre-commit]
        require_serial: true

      - id: ruff-check
        name: Lint with ruff
        entry: uv run ruff check --ignore E203,E402,E501,E266,W505,F841,F842,F401,W293,I001,UP015,C901,W291 --isolated --fix
        language: system
        types: [python]
        pass_filenames: true
        stages: [pre-commit]
        require_serial: true

      - id: deptry
        name: Check dependencies with deptry
        entry: uv run deptry src
        language: system
        types: [python]
        pass_filenames: false
        stages: [pre-commit]
        require_serial: true

  # Resource-intensive hooks using project-local wrappers
  - repo: local
    hooks:
      - id: mypy-limited
        name: Type checking (memory limited)
        entry: .pre-commit-wrappers/memory-limited-hook.sh uv run mypy
        language: system
        types: [python]
        require_serial: true
        pass_filenames: true
        stages: [pre-commit]
        args: [--strict, --show-error-context, --pretty, --install-types, --non-interactive]

      - id: trufflehog-limited
        name: Secret detection (resource limited)
        entry: .pre-commit-wrappers/trufflehog-limited.sh
        language: system
        pass_filenames: false
        require_serial: true
        stages: [pre-commit]

  # YAML formatting and linting (sequential)
  - repo: local
    hooks:
      - id: yamlfmt
        name: Format YAML files
        entry: yamlfmt
        language: system
        files: '^\.github/.*\.(yml|yaml)$'
        pass_filenames: true
        stages: [pre-commit]
        require_serial: true

      - id: yamllint
        name: Lint YAML files
        entry: uv run yamllint
        language: system
        files: '^\.github/.*\.(yml|yaml)$'
        pass_filenames: true
        stages: [pre-commit]
        require_serial: true

      - id: actionlint
        name: Lint GitHub Actions workflows
        entry: actionlint
        language: system
        files: '^\.github/workflows/.*\.(yml|yaml)$'
        pass_filenames: true
        stages: [pre-commit]
        require_serial: true

# CI configuration
ci:
  skip:
    - mypy-limited
    - trufflehog-limited
